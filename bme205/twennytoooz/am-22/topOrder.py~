#File: TopologicalOrderGenerator.py
#Authors: CammyG and AMakiZZle
#Description: Generates a topological order for the viterbi algorithm

import sys

def GetNextTopologicalState(currentState, currentStateIndex, maxStateIndex):
    if currentStateIndex == 0:       
        if currentState == 'S':
            return 'D1'
        elif currentState.startswith('D'):
            idx = int(currentState[1])
            idx+=1
            if idx >= maxStateIndex:
                return 'I0'
            return 'D' + str(idx)
        else:
            return 'M1'
    
    idx = int(currentState[1])
    if currentState.startswith('M'):
        return 'D' + str(idx)
        
    if currentState.startswith('D'):
        idx = int(currentState[1])
        return 'I' + str(idx)
        
    if currentState.startswith('I'):
        idx+=1
        if(idx > maxStateIndex):
            return 'E'
        return 'M' + str(idx)

def main():
    currentState = 'S'
    currentStateIndex = 0
    maxStateIndex = 8
    
    # currentState index is 0 for S through I0
    i=0
    while i <= maxStateIndex+1:
        print(currentState)
        currentState = GetNextTopologicalState(currentState, currentStateIndex, maxStateIndex)
        i+=1
    
    # currentState index is incremented to indicate it isnt zero anymore
    currentStateIndex +=1
    
    #loop until we hit 'E'
    while (currentState != 'E'):
        currentState = GetNextTopologicalState(currentState, currentStateIndex, maxStateIndex)
        print(currentState)
        
if __name__== "__main__":
    main()

